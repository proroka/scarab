#!/usr/bin/env python
PACKAGE = "roboclaw"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("pid_p", double_t, 0, "PID Proportional gain", 1.0, 0, 50.0)
gen.add("pid_i", double_t, 0, "PID Integral gain", 4.0, 0, 50.0)
gen.add("pid_d", double_t, 0, "PID Derivative gain", 0.2, 0, 50.0)
gen.add("pid_iclamp", double_t, 0, "Max I magnitude", 500.0, 0.0, 1000.0)

# gen.add("pid_qpps", int_t, 0, "Quad pulses per second", 300000, 0, 500000)
gen.add("accel_max", double_t, 0, "Maximum wheel acceleration (m/s^2)",
        1.0, 0, 2.0)
gen.add("max_wheel_vel", double_t, 0, "Maximum individual wheel speed (m/s)",
        0.8, 0, 1.0)
gen.add("min_wheel_vel", double_t, 0, "Minimum individual wheel speed (m/s)",
        0.0, 0, 1.0)
gen.add("wheel_diam", double_t, 0, "Wheel diameter (m)",
        0.10, 0.01, 0.5)
gen.add("quad_pulse_per_motor_rev", int_t, 0, "Quad pulses / motor revolution",
        2000, 0, 5000)
gen.add("motor_to_wheel_ratio", double_t, 0,
        "Number of motor revolutions for one wheel revolution",
        38.35, 0.01, 100)
gen.add("axle_width", double_t, 0, "Spacing between wheels (m)",
        0.255, 0.01, 0.4)

gen.add("freq", double_t, 0, "The update rate of odometry integration (Hz)",
        50, 0, 100)

gen.add("odom_frame", str_t, 0, "The odometry frame of the robot", "odom_motor")
gen.add("base_frame", str_t, 0, "The local frame of the robot", "base_link")

gen.add("pid_error_reset_v_step_threshold", double_t, 0,
        "Min linear velocity change to reset PID errors (m/s)",
        0.1, 0.0, 1.0)
gen.add("pid_error_reset_w_step_threshold", double_t, 0,
        "Min angular velocity change to reset PID errors (rad/s)", 
        0.3, 0.0, 2.0)
gen.add("pid_error_reset_min_v", double_t, 0,
        "Min linear velocity to reset PID errors (m/s)",
        0.01, 0.0, 0.1)
gen.add("pid_error_reset_min_w", double_t, 0,
        "Min angular velocity to reset PID errors (rad/s)",
        0.01, 0.0, 0.2)

exit(gen.generate(PACKAGE, "roboclaw_node", "Roboclaw"))
